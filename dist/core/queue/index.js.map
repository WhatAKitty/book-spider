{"version":3,"sources":["../../../src/core/queue/index.js"],"names":["_queue","Symbol","_options","_task","sleep","ms","Promise","resolve","reject","setTimeout","Queue","task","options","interval","addData","bind","run","wait","waitAll","data","unshift","JSON","parse","stringify","length","console","log","Date","toLocaleString","shift"],"mappings":";AACA,IAAMA,SAASC,OAAO,OAAP,CAAf;AACA,IAAMC,WAAWD,OAAO,SAAP,CAAjB;AACA,IAAME,QAAQF,OAAO,MAAP,CAAd;;AAEA;AACA,IAAMG,QAAQ,SAARA,KAAQ,CAACC,EAAD,EAAQ;AACpB;AACE,QAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AACrCC,iBAAW,YAAY;AACrBF;AACD,OAFD,EAEGF,EAFH;AAGD,KAJD,CADF;;AAOD,CARD,C;;AAUMK,K;AACJ,mBAAuC,KAA3BC,IAA2B,uEAApB,YAAM,CAAG,CAAW,KAATC,OAAS;AACrC,SAAKV,QAAL;AACEW,gBAAU,KADZ;AAEKD,WAFL;;AAIA,SAAKT,KAAL,IAAcQ,IAAd;AACA,SAAKX,MAAL,IAAe,EAAf;;AAEA,SAAKc,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKC,GAAL,GAAW,KAAKA,GAAL,CAASD,IAAT,CAAc,IAAd,CAAX;AACA,SAAKE,IAAL,GAAY,KAAKA,IAAL,CAAUF,IAAV,CAAe,IAAf,CAAZ;AACA,SAAKG,OAAL,GAAe,KAAKA,OAAL,CAAaH,IAAb,CAAkB,IAAlB,CAAf;;AAEA,SAAKC,GAAL;AACD,G;;AAEOG,Q,EAAM;AACZ,WAAKnB,MAAL,EAAaoB,OAAb,CAAqBC,KAAKC,KAAL,CAAWD,KAAKE,SAAL,CAAeJ,IAAf,CAAX,CAArB;AACD,K;;;AAGQ,oB;AACA,qBAAKnB,MAAL,EAAawB,M;AAChBC,wBAAQC,GAAR,cAAuB,IAAIC,IAAJ,GAAWC,cAAX,CAA0B,IAA1B,CAAvB,qCAAsF,KAAK5B,MAAL,EAAawB,MAAnG,gBAAmH,KAAKxB,MAAL,EAAawB,MAAb,GAAsB,CAAtB,gCAAuD,EAA1K,G;AACM,uBAAKP,IAAL,E;;;;AAIFE,oB,GAAO,KAAKnB,MAAL,EAAa6B,KAAb,E;;;;AAIL,uBAAK1B,KAAL,EAAYgB,IAAZ,C;;AAENM,wBAAQC,GAAR,cAAuB,IAAIC,IAAJ,GAAWC,cAAX,CAA0B,IAA1B,CAAvB,gF;;;AAGI,uBAAKX,IAAL,E;;;;;AAKFb,wBAAO,eAAe,OAAO,KAAKF,QAAL,EAAeW,QAAtC,GAAkD,KAAKX,QAAL,EAAeW,QAAf,EAAlD,GAA8E,KAAKX,QAAL,EAAeW,QAAnG,C;;;;AAIC,qBAAKb,MAAL,EAAawB,M;AACZpB,wBAAM,KAAKF,QAAL,EAAeW,QAArB,C;;;;;;AAMGH,K","file":"index.js","sourcesContent":["\nconst _queue = Symbol('queue');\nconst _options = Symbol('options');\nconst _task = Symbol('task');\n\n//sleep in Promise\nconst sleep = (ms) => {\n  return (\n    new Promise(function (resolve, reject) {\n      setTimeout(function () {\n        resolve();\n      }, ms);\n    })\n  );\n}\n\nclass Queue {\n  constructor(task = () => { }, options) {\n    this[_options] = {\n      interval: 10000,\n      ...options,\n    };\n    this[_task] = task;\n    this[_queue] = [];\n\n    this.addData = this.addData.bind(this);\n    this.run = this.run.bind(this);\n    this.wait = this.wait.bind(this);\n    this.waitAll = this.waitAll.bind(this);\n\n    this.run();\n  }\n\n  addData(data) {\n    this[_queue].unshift(JSON.parse(JSON.stringify(data)));\n  }\n\n  async run() {\n    while (true) {\n      if (!this[_queue].length) {\n        console.log(`[QUEUE] ${new Date().toLocaleString('zh')} decet queue data, there has ${this[_queue].length} data; ${this[_queue].length > 0 ? `start run task with data` : ''}`)\n        await this.wait();\n        continue;\n      }\n\n      const data = this[_queue].shift();\n\n      try {\n        // do task\n        await this[_task](data);\n      } catch (err) {\n        console.log(`[QUEUE] ${new Date().toLocaleString('zh')} task execute failed, will skip this data and start next one`, err);\n      }\n\n      await this.wait();\n    }\n  }\n\n  async wait() {\n    await sleep(('function' === typeof this[_options].interval) ? this[_options].interval() : this[_options].interval);\n  }\n\n  async waitAll() {\n    while (this[_queue].length) {\n      await sleep(this[_options].interval);\n    }\n  }\n\n}\n\nexport default Queue;\n"]}