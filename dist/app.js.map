{"version":3,"sources":["../src/app.js"],"names":["app","router","use","routes","allowedMethods","maxage","hidden","gzip","name","level","requestIdContext","requestLogger","routePrefix","swaggerOptions","url","options","process","env","__DEV__","key","readFileSync","cert","createServer","callback","listen"],"mappings":"aAAA,0B;AACA,wB;AACA,4B;AACA,8B;AACA,uC;AACA,uC;AACA,oD;AACA,gD;AACA,4B;;AAEA,sC;AACA,wC;AACA,uC;AACA,4C;AACA,0B;;AAEA,IAAMA,MAAM,mBAAZ;AACA,IAAMC,SAAS,yBAAf;;AAEAA,OAAOC,GAAP,CAAW,eAAQC,MAAR,EAAX,EAA6B,eAAQC,cAAR,EAA7B;AACAH,OAAOC,GAAP,CAAW,eAAUC,MAAV,EAAX,EAA+B,eAAUC,cAAV,EAA/B;AACAH,OAAOC,GAAP,CAAW,eAAUC,MAAV,EAAX,EAA+B,eAAUC,cAAV,EAA/B;AACAH,OAAOC,GAAP,CAAW,kBAAWC,MAAX,EAAX,EAAgC,kBAAWC,cAAX,EAAhC;;AAEAJ;AACGE,GADH,CACO,yBAAM,UAAN,EAAkB;AACrBG,UAAQ,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAAjB,GAAsB,GADT;AAErBC,UAAQ,IAFa;AAGrBC,QAAM,IAHe,EAAlB,CADP;;AAMGL,GANH,CAMO,+BAAO;AACVM,QAAM,aADI;AAEVC,SAAO,OAFG,EAAP,CANP;;AAUGP,GAVH,CAUO,0BAAOQ,gBAAP,EAVP;AAWGR,GAXH,CAWO,0BAAOS,aAAP,EAXP;AAYGT,GAZH,CAYOD,OAAOE,MAAP,EAZP;AAaGD,GAbH,CAaOD,OAAOG,cAAP,EAbP;AAcGF,GAdH,CAcO,6BAAU;AACbU,eAAa,aADA,EACe;AAC5BC,kBAAgB;AACdC,SAAK,+BADS,CACwB;AADxB,GAFH,EAAV,CAdP;;;AAqBA,cAAK,YAAM;AACT,MAAMC,UAAU,CAACC,QAAQC,GAAR,CAAYC,OAAb,IAAwB;AACtCC,SAAK,aAAGC,YAAH,CAAgB,oBAAhB,CADiC;AAEtCC,UAAM,aAAGD,YAAH,CAAgB,oBAAhB,CAFgC,EAAxC;;;AAKA,iBAAKE,YAAL,CAAkBtB,IAAIuB,QAAJ,EAAlB,EAAkCC,MAAlC,CAAyC,IAAzC;AACA,GAACR,QAAQC,GAAR,CAAYC,OAAb,IAAwB,gBAAMI,YAAN,CAAmBP,OAAnB,EAA4Bf,IAAIuB,QAAJ,EAA5B,EAA4CC,MAA5C,CAAmD,IAAnD,CAAxB;AACD,CARD","file":"app.js","sourcesContent":["import Koa from 'koa';\nimport fs from 'fs';\nimport http from 'http';\nimport https from 'https';\nimport Router from 'koa-router';\nimport serve from 'koa-static';\nimport logger from 'koa-bunyan-logger';\nimport swaggerUI from 'koa2-swagger-ui';\nimport path from 'path';\n\nimport BookApi from './api/book.api';\nimport BookApiV2 from './api/book.api2';\nimport RankApiV2 from './api/rank.api2';\nimport SwaggerApi from './api/swagger.api';\nimport { init } from './db';\n\nconst app = new Koa();\nconst router = new Router();\n\nrouter.use(BookApi.routes(), BookApi.allowedMethods());\nrouter.use(BookApiV2.routes(), BookApiV2.allowedMethods());\nrouter.use(RankApiV2.routes(), RankApiV2.allowedMethods());\nrouter.use(SwaggerApi.routes(), SwaggerApi.allowedMethods());\n\napp\n  .use(serve('./static', {\n    maxage: 1000 * 60 * 60 * 24 * 365,\n    hidden: true,\n    gzip: true,\n  }))\n  .use(logger({\n    name: 'book-spider',\n    level: 'debug',\n  }))\n  .use(logger.requestIdContext())\n  .use(logger.requestLogger())\n  .use(router.routes())\n  .use(router.allowedMethods())\n  .use(swaggerUI({\n    routePrefix: '/swagger-ui', // host at /swagger instead of default /docs\n    swaggerOptions: {\n      url: '/api/v1/swagger/api-docs.json', // example path to json\n    },\n  }));\n\ninit(() => {\n  const options = !process.env.__DEV__ && {\n    key: fs.readFileSync('../cert/server.key'),\n    cert: fs.readFileSync('../cert/server.crt'),\n  }\n\n  http.createServer(app.callback()).listen(3000);\n  !process.env.__DEV__ && https.createServer(options, app.callback()).listen(3443);\n});\n"]}