{"version":3,"sources":["../src/qidian.client.js"],"names":["rest","contentType","dataType","machineid","machine__","createHeader","size","width","height","type","osversion","device","token","Buffer","toString","qdheader","Math","floor","random","Qidian","recommends","GET","urls","recommend","rCount","rdm","sId","data","err","Result","Message","CoverList","Group","searchBooks","params","channel","firstEntry","order","pageIndex","key","search","action","p","update","vipBoutiqueSignstatus","Data","bookInfoHtml","bookId","anotherRest","bookInfo","iosDeviceType","info","BookId","isOutBook","preview","headers","chapters","requestSource","timeStamp","comments","ReviewType"],"mappings":"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","file":"qidian.client.js","sourcesContent":["\nimport Rest from 'react-rest-kit';\nimport { config } from './config';\n\nconst rest = new Rest({\n  contentType: 'application/json',\n  dataType: 'json',\n});\n\n// 需要根据设备ID进行改造\n// 之后计划将两者ID在设备中创建并传递给服务端进行转发请求\nconst machineid = '1bc908e0c5c890a263748aaaedd30a9a';\nconst machine__ = '4b841f8d-ad56-4bf8-ba6f-4fd47c502fb2';\n\nconst createHeader = ({\n  size = '4.7.0',\n  width = 750,\n  height = 1334,\n  type = 'AppStore',\n  osversion = '10.30',\n  device = 'iOS/iPhone/iPhone8,1',\n  token = '1507347832421',\n}) => {\n  return new Buffer(`${machineid}|${size}|${width}|${height}|${type}|${osversion}|5|${device}|199|${type}|3|-999|${token}|0|${machine__}`).toString('base64');\n}\n\nlet qdheader = createHeader({ token: Math.floor(Math.random() * 100000000000) });\n\nconst Qidian = {\n  async recommends() {\n    const { data, err } = await rest.GET(config.urls.recommend, {\n      rCount: 4,\n      rdm: 1507298003,\n      sId: 0,\n    });\n\n    if (err) {\n      // 返回错误\n      return { err };\n    }\n\n    if (data.Result !== 0) {\n      // 起点返回错误\n      return { err: data.Message };\n    }\n\n    return {\n      data: {\n        CoverList: data.CoverList,\n        Group: data.Group,\n      }\n    };\n  },\n  async searchBooks(params = {}) {\n    const { channel = -1, firstEntry = 1, order = -1, pageIndex = 1, size = -1, key = '' } = params;\n    const { data, err } = await rest.GET(config.urls.search, {\n      key,\n      action: -1,\n      channel,\n      firstEntry,\n      order,\n      p: 'all',\n      pageIndex,\n      size,\n      type: 0,\n      update: -1,\n      vipBoutiqueSignstatus: '-1a-1a-1',\n    });\n\n    if (err) {\n      // 返回错误\n      return { err };\n    }\n\n    if (data.Result !== 0) {\n      // 起点返回错误\n      return { err: data.Message };\n    }\n\n    return { data: data.Data };\n  },\n  async bookInfoHtml(params = {}) {\n    const { bookId } = params;\n    const anotherRest = new Rest({\n      contentType: 'application/json',\n      dataType: 'text',\n    });\n    const { data, err } = await anotherRest.GET(`https://book.qidian.com/info/${bookId}`);\n\n    if (err) {\n      // 返回错误\n      return { err };\n    }\n\n    return { data: data };\n  },\n  async bookInfo(params = {}) {\n    const { bookId, iosDeviceType = 0 } = params;\n    const { data, err } = await rest.GET(config.urls.info, {\n      BookId: bookId,\n      iosDeviceType,\n      isOutBook: 0,\n      preview: 0,\n    }, {\n        headers: {\n          'qdheader': qdheader,\n        },\n      });\n\n    if (err) {\n      // 返回错误\n      return { err };\n    }\n\n    if (data.Result !== 0) {\n      // 起点返回错误\n      return { err: data.Message };\n    }\n\n    return { data: data.Data };\n  },\n  async chapters(params = {}) {\n    const { bookId, pageIndex = -1 } = params;\n    const { data, err } = await rest.GET(config.urls.chapters, {\n      bookId,\n      pageIndex,\n      requestSource: 0,\n      timeStamp: 0,\n    }, {\n        headers: {\n          'qdheader': qdheader,\n        },\n      });\n\n    if (err) {\n      // 返回错误\n      return { err };\n    }\n\n    if (data.Result !== 0) {\n      // 起点返回错误\n      return { err: data.Message };\n    }\n\n    return { data: data.Data };\n  },\n  async comments(params = {}) {\n    const { bookId, pageIndex = 1 } = params;\n    const { data, err } = await rest.GET(config.urls.comments, {\n      ReviewType: 112,\n      bookId,\n      pageIndex,\n    }, {\n        headers: {\n          'qdheader': qdheader,\n        },\n      });\n\n    if (err) {\n      // 返回错误\n      return { err };\n    }\n\n    if (data.Result !== 0) {\n      // 起点返回错误\n      return { err: data.Message };\n    }\n\n    return { data: data.Data };\n  },\n}\n\nexport default Qidian;\n"]}